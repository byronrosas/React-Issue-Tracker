{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/graphQLFetch.js","webpack:///./src/jsx/App.jsx","webpack:///./src/jsx/Contents.jsx","webpack:///./src/jsx/IssueAdd.jsx","webpack:///./src/jsx/IssueEdit.jsx","webpack:///./src/jsx/IssueFilter.jsx","webpack:///./src/jsx/IssueList.jsx","webpack:///./src/jsx/IssueReport.jsx","webpack:///./src/jsx/IssueTable.jsx","webpack:///./src/jsx/Page.jsx"],"names":["dateRegex","RegExp","jsonDateReviver","key","value","test","Date","graphQLFetch","query","variables","fetch","window","ENV","UI_API_ENDPOINT","method","headers","body","JSON","stringify","response","text","result","parse","errors","error","extensions","code","details","exception","join","alert","message","data","element","ReactDOM","render","document","getElementById","module","NotFound","Contents","IssueList","IssueEdit","IssueReport","IssueAdd","handleSubmit","bind","propTypes","createIssue","PropTypes","func","isRequired","e","preventDefault","form","forms","issueAdd","issue","owner","title","due","getTime","props","React","Component","match","id","params","IssueFilter","onChangeStatus","status","target","history","push","pathname","search","withRouter","state","issues","console","log","loadData","prevProps","prevSearch","location","URLSearchParams","vars","get","setState","issueList","IssueDetail","IssueRow","created","toDateString","effort","IssueTable","issuesRows","map","NavBar","Page"],"mappings":"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AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA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","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d');\r\nfunction jsonDateReviver(key, value) {\r\n  if (dateRegex.test(value)) return new Date(value);\r\n  return value;\r\n}\r\n\r\nexport default async function graphQLFetch(query, variables = {}) {\r\n  try {\r\n    const response = await fetch(window.ENV.UI_API_ENDPOINT, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ query, variables }),\r\n    });\r\n    const body = await response.text();\r\n    const result = JSON.parse(body, jsonDateReviver);\r\n    if (result.errors) {\r\n      const error = result.errors[0];\r\n      if (error.extensions.code === 'BAD_USER_INPUT') {\r\n        const details = error.extensions.exception.errors.join('\\n');\r\n        alert(`${error.message}:\\n ${details}`);\r\n      } else {\r\n        alert(`${error.extensions.code}: ${error.message}`);\r\n      }\r\n    }\r\n    return result.data;\r\n  } catch (e) {\r\n\t\t alert(`Error in sending data to server: ${e.message}`);\r\n  }\r\n}","import graphQLFetch from '../graphQLFetch.js';\nimport 'babel-polyfill'; \nimport 'whatwg-fetch'; \nimport React from 'react'; \nimport ReactDOM from 'react-dom';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport Page from './Page.jsx';\n// import IssueList from './IssueList.jsx'; \n// const element = (\n// \t<div title=\"Outer div\">\n// \t\t<h1>Hello Word!</h1>\n// \t</div>\n// );\n\n// ReactDOM.render(element,document.getElementById('content'));\n\n// class HelloWorld extends React.Component{\n// \trender(){\n// \t\tconst continents = ['Africa','America','Asia','Australia','Europe'];\n// \t\tconst helloContinents = Array.from(continents, c => `Hello ${c}!`);\n// \t\tconst message = helloContinents.join(' ');\n// \t\treturn (\n// \t\t\t <div title=\"Outer div\">\n// \t\t\t \t<h1>{message}</h1>\n// \t\t\t </div>\n// \t\t\t);\n// \t}\n\n// }\n\n// const element = <HelloWorld/>\n// ReactDOM.render(element,document.getElementById('content'));\n\n// const initialIssues = [  {\n// \t\t\t\tid: 1, status: 'New', owner: 'Ravan', effort: 5,    created: new Date('2018-08-15'), due: undefined,    title: 'Error in console when clicking Add',\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tid: 2, status: 'Assigned', owner: 'Eddie', effort: 14,    created: new Date('2018-08-16'), due: new Date('2018-08-30'),    title: 'Missing bottom border on panel',\n// \t\t\t},\n// \t\t\t];\n\n\n/* eslint \"react/react-in-jsx-scope\": \"off\" */\n/* eslint \"react/jsx-no-undef\": \"off\" */\n/* eslint \"no-alert\": \"off\" */\n/* eslint \"react/no-multi-comp\": \"off\" */\n// const sampleIssue = { status: 'New', owner: 'Pieta', title: 'Completion date should be optional' };\n\n\n// eslint-disable-next-line react/prefer-stateless-function\n// class IssueFilter extends React.Component {\n//   render() {\n//     return (\n//       <div>\n// \t\t\t\tPlaceholder IssueFilter\n//       </div>\n//     );\n//   }\n// }\n\n\n// if component only have props, it can to represent as function\n// class IssueTable extends React.Component{\n\n// constructor(){\n// super();\n// this.state={issues:initialIssues}\n// this.state={issues:[]}\n// setTimeout(() => {      this.createIssue(sampleIssue);    }, 2000);\n// }\n//  \tcreateIssue(issue) {\n//  \t\tissue.id = this.state.issues.length + 1;\n//  \t\tissue.created = new Date();\n//  \t\tconst newIssueList = this.state.issues.slice();\n//  \t\tnewIssueList.push(issue);\n//  \t\tthis.setState({ issues: newIssueList });\n//  \t}\n// componentDidMount()\n// {\n// \tthis.loadData();\n// }\n\n// loadData()\n// {\n// \tsetTimeout(()=>{\n// \t\tthis.setState({issues:initialIssues});\n// \t},500);\n// }\n\n//\trender(){\n// const issues = [  {\n// \t\tid: 1, status: 'New', owner: 'Ravan', effort: 5,    created: new Date('2018-08-15'), due: undefined,    title: 'Error in console when clicking Add',\n// \t},\n// \t{\n// \t\tid: 2, status: 'Assigned', owner: 'Eddie', effort: 14,    created: new Date('2018-08-16'), due: new Date('2018-08-30'),    title: 'Missing bottom border on panel',\n// \t},\n// \t];\n\n\n// const issuesRows=issues.map(issue => <IssueRow key={issue.id} rowStyle={rowStyle} issue={issue}></IssueRow>);\n// const issuesRows=issues.map(issue => <IssueRow key={issue.id}  issue={issue}></IssueRow>);\n// const issuesRows=this.state.issues.map(issue => <IssueRow key={issue.id}  issue={issue}></IssueRow>);\n// const issuesRows=this.props.issues.map(issue => <IssueRow key={issue.id}  issue={issue}></IssueRow>);\n// const rowStyle = {border:\"1px solid silver\", padding:4};\n// return(\n// \t<table className=\"bordered-table\">\n// \t\t<thead>\n// \t\t\t<tr>\n// \t\t\t \t<th>ID</th>\n// \t\t\t \t<th>Status</th>\n// \t\t\t \t<th>Owner</th>\n// \t\t\t \t<th>Created</th>\n// \t\t\t \t<th>Effort</th>\n// \t\t\t \t<th>Due Date</th>\n// \t\t\t \t<th>Title</th>\n// \t\t\t</tr>\n// \t\t</thead>\n// \t\t<tbody>\n// \t\t\t{issuesRows}\n// \t\t</tbody>\n// \t</table>\n// );\n// }\n// }\n\n// function IssueTable({ issues }) {  \n//   // const issuesRows = props.issues.map((issue) => <IssueRow key={issue.id} issue={issue} />);\n//   const issuesRows = issues.map((issue) => <IssueRow key={issue.id} issue={issue} />);\n//   // const rowStyle = {border:\"1px solid silver\", padding:4};\n//   return (\n//     <table className=\"bordered-table\">\n//       <thead>\n//         <tr>\n//           <th>ID</th>\n//           <th>Status</th>\n//           <th>Owner</th>\n//           <th>Created</th>\n//           <th>Effort</th>\n//           <th>Due Date</th>\n//           <th>Title</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {issuesRows}\n//       </tbody>\n//     </table>\n//   );\n// }\n// if component only have props, it can to represent as function\n\n// class IssueRow extends React.Component{\n// \trender(){\n// \t\t// const style = this.props.rowStyle;\n// \t\tconst issue = this.props.issue;\n// \t\treturn(\n// \t\t\t<tr>\n// \t\t\t\t{/*<td style={style}>{this.props.issue_id}</td>*/}\n// \t\t\t\t{/*<td style={style}>{this.props.issue_title}</td>*/}\n// \t\t\t\t{/*<td style={style}>{this.props.children}</td>*/}\n\n// \t\t\t \t<td>{issue.id}</td>\n// \t\t\t \t<td>{issue.status}</td>\n// \t\t\t \t<td>{issue.owner}</td>\n// \t\t\t \t<td>{issue.created.toDateString()}</td>\n// \t\t\t \t<td>{issue.effort}</td>\n// \t\t\t \t<td>{issue.due ? issue.due.toDateString() : ''}</td>\n// \t\t\t \t<td>{issue.title}</td>\n// \t\t\t</tr>\n// \t\t);\n// \t}\n// }\n\n// const dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d');\n// function jsonDateReviver(key, value) {\n//   if (dateRegex.test(value)) return new Date(value);\n//   return value;\n// }\n\n// function IssueRow({ issue }) {  \n//   // const { issue } = props;\n//   return (\n//     <tr>\n//       {/* <td style={style}>{this.props.issue_id}</td> */}\n//       {/* <td style={style}>{this.props.issue_title}</td> */}\n//       {/* <td style={style}>{this.props.children}</td> */}\n\n//       <td>{issue.id}</td>\n//       <td>{issue.status}</td>\n//       <td>{issue.owner}</td>\n//       <td>{issue.created.toDateString()}</td>\n//       <td>{issue.effort}</td>\n//       <td>{issue.due ? issue.due.toDateString() : ''}</td>\n//       <td>{issue.title}</td>\n//     </tr>\n//   );\n// }\n\n\n/* globals React ReactDOM PropTypes */ \n// class IssueAdd extends React.Component {\t    \n//   constructor() {\n//     super();\n//     // setTimeout(() => {      this.props.createIssue(sampleIssue);    }, 2000);\n//     this.handleSubmit = this.handleSubmit.bind(this);    \n    \n//     // verify, createIssue prop will be required\n//     IssueAdd.propTypes = {  createIssue: PropTypes.func.isRequired, };\n//   }\n\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     // get form by name\n//     const form = document.forms.issueAdd;\n//     const issue = {\n//       owner: form.owner.value,\n//       title: form.title.value,\n//       due: new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10),\n//     };\n//     // this.props.createIssue(issue);\n//     const { createIssue } = this.props;\n//     createIssue(issue);\n//     form.owner.value = '';\n//     form.title.value = '';\n//   }\n\n//   render() {\n//     return (\n//       <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\n//         <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" />\n//         <button type=\"submit\">Add</button>\n//       </form>\n//     );\n//   }\n// }\n\n// async function graphQLFetch(query, variables = {}) {\n//   try {\n//     const response = await fetch(window.ENV.UI_API_ENDPOINT, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ query, variables }),\n//     });\n//     const body = await response.text();\n//     const result = JSON.parse(body, jsonDateReviver);\n//     if (result.errors) {\n//       const error = result.errors[0];\n//       if (error.extensions.code === 'BAD_USER_INPUT') {\n//         const details = error.extensions.exception.errors.join('\\n');\n//         alert(`${error.message}:\\n ${details}`);\n//       } else {\n//         alert(`${error.extensions.code}: ${error.message}`);\n//       }\n//     }\n//     return result.data;\n//   } catch (e) {\n// \t\t alert(`Error in sending data to server: ${e.message}`);\n//   }\n// }\n\n\n// class IssueList extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = { issues: [] };\n//     this.createIssue = this.createIssue.bind(this);\n//   }\n\n//   async createIssue(issue) {\n//   \t\t// issue.id = this.state.issues.length + 1;\n//   \t\t// issue.created = new Date();\n//   \t\t// const newIssueList = this.state.issues.slice();\n//   \t\t// newIssueList.push(issue);\n//   \t\t// this.setState({ issues: newIssueList });\n\n//   \t// \tconst query = `mutation {\n//     //   issueAdd(issue:{\n//     //     title: \"${issue.title}\",\n//     //     owner: \"${issue.owner}\",\n//     //     due: \"${issue.due.toISOString()}\",\n//     //   }) {\n//     //     id\n//     //   }\n//     // }`;\n//     // issue.due = issue.due.toISOString()\n//     console.log('CREATE');\n//     console.log(issue);\n//     const query = `mutation issueAdd($issue: IssueInputs!) \n// \t\t\t\t\t\t{      \n// \t\t\t\t\t\t\tissueAdd(issue: $issue) {        \n// \t\t\t\t\t\t\t\tid      \n// \t\t\t\t\t\t\t}    \n// \t\t\t\t\t\t}`;\n\n//     // const response = await fetch('/graphql',{\n//     // \tmethod:'POST',\n//     // \theaders: { 'Content-Type': 'application/json'},\n//     // \tbody: JSON.stringify({ query,variables:{issue} })\n//     // });\n\n//     // this.loadData();\n//     const data = await graphQLFetch(query, { issue });\n//     if (data) {\n//       this.loadData();\n//     }\n//   \t}\n\n//   componentDidMount() {\n//     this.loadData();\n//   }\n\n//   async loadData() {\n//     // setTimeout(()=>{\n//     // \tthis.setState({issues:initialIssues});\n//     // },500);\n//     const query = `\n// \t\t\tquery{\n// \t\t\t\tissueList{\n// \t\t\t\t\tid title status owner created effort due\n// \t\t\t\t}\n// \t\t\t}\n// \t\t`;\n\n//     // const response = await fetch('/graphql',{\n//     // \tmethod:'POST',\n//     // \theaders: { 'Content-Type': 'application/json'},\n//     // \tbody:JSON.stringify({query})\n//     // });\n//     // const result = await response.json();\n//     // const body = await response.text();\n//     // const result = JSON.parse(body,jsonDateReviver);\n//     // this.setState({issues:result.data.issueList});\n//     const data = await graphQLFetch(query);\n//     if (data) {\n//       this.setState({ issues: data.issueList });\n//     }\n//   }\n//   render() {\n//   \tconst { issues } = this.state;\n//     return (\n//       <>\n//         <h1>Inventio Issue Tracker</h1>\n//         <IssueFilter />\n//         <hr />\n//         <IssueTable issues={issues} />\n//         <hr />\n//         {/* set bind, because I need the IssueList context \"this\", */}\n//         {/* when createIssue is execute, use the issuelist context */}\n//         {/* <IssueAdd createIssue={this.createIssue.bind(this)} /> */}\n//         <IssueAdd createIssue={this.createIssue} />\n//       </>\n//     );\n//   }\n// }\n\n// const element = <IssueList />;\n// import IssueList from './IssueList.jsx';\n// const element = <IssueList />;\nconst element = (\n  <Router>\n    <Page />\n  </Router>\n);\nReactDOM.render(element, document.getElementById('content'));\n\nif (module.hot) {  module.hot.accept(); } ","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport IssueList from './IssueList.jsx';\r\nimport IssueReport from './IssueReport.jsx';\r\nimport IssueEdit from './IssueEdit.jsx';\r\n\r\nconst NotFound = () => <h1>Page not found</h1>;\r\n\r\nexport default function Contents()\r\n{\r\n\treturn (\r\n\t\t\t<Switch>\r\n\t\t\t\t<Redirect exact from=\"/\" to=\"/issues\" />\r\n\t\t\t\t<Route path=\"/issues\" component={IssueList}></Route>\r\n\t\t\t\t<Route path=\"/edit/:id\" component={IssueEdit}></Route>\r\n\t\t\t\t<Route path=\"/report\" component={IssueReport}></Route>\t\t\t\t\r\n\t\t\t\t<Route component={NotFound} />\r\n\t\t\t</Switch>\r\n\t\t);\r\n}","import React from 'react'; \r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class IssueAdd extends React.Component {\t    \r\n  constructor() {\r\n    super();\r\n    // setTimeout(() => {      this.props.createIssue(sampleIssue);    }, 2000);\r\n    this.handleSubmit = this.handleSubmit.bind(this);    \r\n    \r\n    // verify, createIssue prop will be required\r\n    IssueAdd.propTypes = {  createIssue: PropTypes.func.isRequired, };\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    // get form by name\r\n    const form = document.forms.issueAdd;\r\n    const issue = {\r\n      owner: form.owner.value,\r\n      title: form.title.value,\r\n      due: new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10),\r\n    };\r\n    // this.props.createIssue(issue);\r\n    const { createIssue } = this.props;\r\n    createIssue(issue);\r\n    form.owner.value = '';\r\n    form.title.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\r\n        <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\r\n        <input type=\"text\" name=\"title\" placeholder=\"Title\" />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default function IssueEdit({ match })\r\n{\r\n\tconst { id } = match.params;\r\n\treturn (\r\n\t\t<h2>{`This is a placeholder for editing issue ${id}`}</h2>\r\n\t);\r\n}","/* eslint \"react/prefer-stateless-function\": \"off\" */\r\nimport React from 'react';\r\n\r\n// import { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass IssueFilter extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.onChangeStatus = this.onChangeStatus.bind(this);\r\n\t}\r\n\r\n\tonChangeStatus(e)\r\n\t{\r\n\t\tconst status = e.target.value;\r\n\t\tconst { history } = this.props;\r\n\t\thistory.push({\r\n\t\t\tpathname:'/issues',\r\n\t\t\tsearch:status ?  `?status=${status}`  : '',\r\n\t\t});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tStatus:\r\n\t\t\t\t{' '}\r\n\t\t\t\t<select onChange = {this.onChangeStatus}>\r\n\t\t\t\t\t<option value=\"\">(All)</option>\r\n\t\t\t\t\t<option value=\"New\">New</option>\r\n\t\t\t\t\t<option value=\"Assigned\">Assigned</option>\r\n\t\t\t\t\t<option value=\"Fixed\">Fixed</option>\r\n\t\t\t\t\t<option value=\"Closed\">Closed</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n// withRouter; exports wrapper with history\r\nexport default withRouter(IssueFilter);\r\n// export default class IssueFilter extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n// \t\t\t\t// Placeholder IssueFilter\r\n// \t\t\t\t{/*<a href=\"/#/issues\">All Issues</a>*/}\r\n// \t\t\t\t<Link to=\"/issues\">All Issues</Link>\r\n// \t\t\t\t{ ' | ' }\r\n// \t\t\t\t{ <a href=\"/#/issues?status=New\">New Issues</a>}\r\n// \t\t\t\t<Link to={{ pathname:'/issues', search:'?status=New'}}>New Issues</Link>\r\n// \t\t\t\t{ ' | ' }\r\n// \t\t\t\t{/* <a href=\"/#/issues?status=Assigned\">Assigned Issues</a>*/}\r\n// \t\t\t\t<Link to={{ pathname:'/issues', search:'?status=Assigned'}}>Assigned Issues</Link>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport IssueFilter from './IssueFilter.jsx'; \r\nimport IssueTable from './IssueTable.jsx'; \r\nimport IssueAdd from './IssueAdd.jsx'; \r\nimport graphQLFetch from '../graphQLFetch.js';\r\nimport { Route } from 'react-router-dom';\r\nimport URLSearchParams from 'url-search-params';\r\n\r\nexport default class IssueList extends React.Component{\t\r\n  constructor() {\r\n    super();\r\n    this.state = { issues: [] };\r\n    this.createIssue = this.createIssue.bind(this);\r\n  }\r\n\r\n  async createIssue(issue) {\r\n  \t\t// issue.id = this.state.issues.length + 1;\r\n  \t\t// issue.created = new Date();\r\n  \t\t// const newIssueList = this.state.issues.slice();\r\n  \t\t// newIssueList.push(issue);\r\n  \t\t// this.setState({ issues: newIssueList });\r\n\r\n  \t// \tconst query = `mutation {\r\n    //   issueAdd(issue:{\r\n    //     title: \"${issue.title}\",\r\n    //     owner: \"${issue.owner}\",\r\n    //     due: \"${issue.due.toISOString()}\",\r\n    //   }) {\r\n    //     id\r\n    //   }\r\n    // }`;\r\n    // issue.due = issue.due.toISOString()\r\n    console.log('CREATE');\r\n    console.log(issue);\r\n    const query = `mutation issueAdd($issue: IssueInputs!) \r\n\t\t\t\t\t\t{      \r\n\t\t\t\t\t\t\tissueAdd(issue: $issue) {        \r\n\t\t\t\t\t\t\t\tid      \r\n\t\t\t\t\t\t\t}    \r\n\t\t\t\t\t\t}`;\r\n\r\n    // const response = await fetch('/graphql',{\r\n    // \tmethod:'POST',\r\n    // \theaders: { 'Content-Type': 'application/json'},\r\n    // \tbody: JSON.stringify({ query,variables:{issue} })\r\n    // });\r\n\r\n    // this.loadData();\r\n    const data = await graphQLFetch(query, { issue });\r\n    if (data) {\r\n      this.loadData();\r\n    }\r\n  \t}\r\n\r\n  componentDidMount(prevProps) {\r\n    this.loadData();\r\n\r\n  }\r\n  componentDidUpdate(prevProps) {    \r\n    const { location: { search: prevSearch } } = prevProps;    \r\n    const { location: { search } } = this.props;    \r\n    if (prevSearch !== search) {      \r\n      this.loadData();    \r\n    }  \r\n  }\r\n\r\n  async loadData() {\r\n    // setTimeout(()=>{\r\n    // \tthis.setState({issues:initialIssues});\r\n    // },500);\r\n    const { location: { search } } = this.props;    \r\n    const params = new URLSearchParams(search);    \r\n    const vars = {};    \r\n    if (params.get('status')) vars.status = params.get('status');\r\n \r\n    const query = `query issueList($status: StatusType) {      issueList (status: $status) {        id title status owner        created effort due      }    }`;   \r\n    // const response = await fetch('/graphql',{\r\n    // \tmethod:'POST',\r\n    // \theaders: { 'Content-Type': 'application/json'},\r\n    // \tbody:JSON.stringify({query})\r\n    // });\r\n    // const result = await response.json();\r\n    // const body = await response.text();\r\n    // const result = JSON.parse(body,jsonDateReviver);\r\n    // this.setState({issues:result.data.issueList});\r\n    console.log(\"VARS\",vars);\r\n    const data = await graphQLFetch(query,vars);\r\n    if (data) {\r\n      this.setState({ issues: data.issueList });\r\n    }\r\n  }\r\n  render() {\r\n  \tconst { issues } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Inventio Issue Tracker</h1>\r\n        <IssueFilter />\r\n        <hr />\r\n        <IssueTable issues={issues} />\r\n        <hr />\r\n        {/* set bind, because I need the IssueList context \"this\", */}\r\n        {/* when createIssue is execute, use the issuelist context */}\r\n        {/* <IssueAdd createIssue={this.createIssue.bind(this)} /> */}\r\n        <IssueAdd createIssue={this.createIssue} />\r\n        <hr />\r\n        <Route path=\"issue/:id\" component={IssueDetail} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nexport default function IssueReport() {  \r\n\treturn (    \r\n\t\t<div>      \r\n\t\t\t<h2>This is a placeholder for the Issue Report</h2>    \r\n\t\t</div>  \r\n\t); \r\n}","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction IssueRow({ issue }) {  \r\n  // const { issue } = props;\r\n  return (\r\n    <tr>\r\n      {/* <td style={style}>{this.props.issue_id}</td> */}\r\n      {/* <td style={style}>{this.props.issue_title}</td> */}\r\n      {/* <td style={style}>{this.props.children}</td> */}\r\n\r\n      <td>{issue.id}</td>\r\n      <td>{issue.status}</td>\r\n      <td>{issue.owner}</td>\r\n      <td>{issue.created.toDateString()}</td>\r\n      <td>{issue.effort}</td>\r\n      <td>{issue.due ? issue.due.toDateString() : ''}</td>\r\n      <td>{issue.title}</td>\r\n      {/*<td><a href={`/#/edit/${issue.id}`}>Edit</a></td>*/}\r\n      <td><Link to={`/edit/${issue.id}`}>Edit</Link></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default function IssueTable({ issues }) {  \r\n  // const issuesRows = props.issues.map((issue) => <IssueRow key={issue.id} issue={issue} />);\r\n  const issuesRows = issues.map((issue) => <IssueRow key={issue.id} issue={issue} />);\r\n  // const rowStyle = {border:\"1px solid silver\", padding:4};\r\n  return (\r\n    <table className=\"bordered-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Status</th>\r\n          <th>Owner</th>\r\n          <th>Created</th>\r\n          <th>Effort</th>\r\n          <th>Due Date</th>\r\n          <th>Title</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {issuesRows}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport Contents from './Contents.jsx';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction NavBar(){\r\n\treturn(\r\n\t\t<nav>\r\n\t\t\t{/*<a href=\"/\">Home</a>*/}\r\n\t\t\t<NavLink exact to=\"/\">Home</NavLink>\r\n\t\t\t{' | '}\r\n\t\t\t{/*<a href=\"/#/issues\">Issue List</a>*/}\r\n\t\t\t<NavLink to=\"/issues\">Issue List</NavLink>\r\n\t\t\t{' | '}\r\n\t\t\t{/*<a href=\"/#/report\">Report</a>*/}\r\n\t\t\t<NavLink to=\"/report\">Report</NavLink>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default function Page(){\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<NavBar></NavBar>\r\n\t\t\t<Contents></Contents>\r\n\t\t</div>\r\n\t);\r\n}"],"sourceRoot":""}